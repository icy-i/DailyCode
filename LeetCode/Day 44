594. Longest Harmonious Subsequence
https://leetcode.com/problems/longest-harmonious-subsequence/
class Solution {
    public int findLHS(int[] nums) {
        HashMap<Integer,Integer> keep=new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++)
        {
            if(keep.containsKey(nums[i])==false)
            {
                keep.put(nums[i],0);
            }
            keep.put(nums[i],keep.get(nums[i])+1);
        }
        int ans=0;
        for(Map.Entry m: keep.entrySet()){
            int key=(int)m.getKey();
            int temp=(int)m.getValue();
            if(keep.containsKey(key+1)==true)
            {
                temp+=keep.get(key+1);
            }
            else
            {
                temp=0;
            }
            if(temp>ans) ans=temp;
        }
        return ans;
    }
}
